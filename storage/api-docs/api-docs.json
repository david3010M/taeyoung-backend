{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation Taeyoung",
        "description": "API Documentation for Taeyoung",
        "version": "1.0.0"
    },
    "paths": {
        "/taeyoung-backend/public/api/accountPayable": {
            "get": {
                "tags": [
                    "Account Payables"
                ],
                "summary": "Get all account payables",
                "description": "Get all account payables",
                "operationId": "296e92c45e7732e084711d58a97022e4",
                "parameters": [
                    {
                        "name": "date[]",
                        "in": "query",
                        "description": "Account Payable Date",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date"
                            }
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Filter by amount",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "balance",
                        "in": "query",
                        "description": "Filter by balance",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplier_id",
                        "in": "query",
                        "description": "Filter by client_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "supplier$filterName",
                        "in": "query",
                        "description": "Filter by supplier$filterName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplier$country_id",
                        "in": "query",
                        "description": "Filter by supplier$country_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Filter by order_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "currency$date",
                        "in": "query",
                        "description": "Filter by currency$date",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPayableResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/accountPayable/{id}/payment": {
            "post": {
                "tags": [
                    "Account Payables"
                ],
                "summary": "Store a payment",
                "description": "Store a payment",
                "operationId": "47997c29c7099128253e9b6e0ef46953",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account payable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Store a payment",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePayableMovementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPayableResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthenticated"
                    },
                    "404": {
                        "description": "Account payable not found"
                    },
                    "422": {
                        "$ref": "#/components/schemas/ValidationError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/accountPayable/{id}": {
            "get": {
                "tags": [
                    "Account Payables"
                ],
                "summary": "Get an account payable",
                "description": "Get an account payable",
                "operationId": "dcd82809eda54a71da3828021cc1e24d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account payable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPayableResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthenticated"
                    },
                    "404": {
                        "description": "Account payable not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/accountPayable/deletePayment/{paymentId}": {
            "delete": {
                "tags": [
                    "Account Payables"
                ],
                "summary": "Delete a payment",
                "description": "Delete a payment",
                "operationId": "f62e78b0ccc7743741612a780641d5ec",
                "parameters": [
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pago eliminado correctamente"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthenticated"
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Pago no encontrado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/accountReceivable": {
            "get": {
                "tags": [
                    "Account Receivables"
                ],
                "summary": "Get all account receivables",
                "description": "Get all account receivables",
                "operationId": "d0793728d70bf894b76269a52352a6b9",
                "parameters": [
                    {
                        "name": "date[]",
                        "in": "query",
                        "description": "Account Receivable Date",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date"
                            }
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Filter by amount",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "balance",
                        "in": "query",
                        "description": "Filter by balance",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "Filter by client_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "client$filterName",
                        "in": "query",
                        "description": "Filter by client$filterName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client$country_id",
                        "in": "query",
                        "description": "Filter by client$country_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Filter by order_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "currency$date",
                        "in": "query",
                        "description": "Filter by currency$date",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountReceivableCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/accountReceivable/{id}/payment": {
            "post": {
                "tags": [
                    "Account Receivables"
                ],
                "summary": "Store a payment",
                "description": "Store a payment",
                "operationId": "91b49a0edb76db2a812c4003380b466f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account receivable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Store a payment",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreReceivableMovementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountReceivableResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthenticated"
                    },
                    "404": {
                        "description": "Account receivable not found"
                    },
                    "422": {
                        "$ref": "#/components/schemas/ValidationError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/accountReceivable/{id}": {
            "get": {
                "tags": [
                    "Account Receivables"
                ],
                "summary": "Get an account receivable",
                "description": "Get an account receivable",
                "operationId": "18885c847868dc66b6f8ab23b191e865",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account receivable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountReceivableResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthenticated"
                    },
                    "404": {
                        "description": "Account receivable not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/accountReceivable/deletePayment/{paymentId}": {
            "delete": {
                "tags": [
                    "Account Receivables"
                ],
                "summary": "Delete a payment",
                "description": "Delete a payment",
                "operationId": "29c3867f71d3b84c8bf74996934d207b",
                "parameters": [
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "Payment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pago eliminado correctamente"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthenticated"
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Pago no encontrado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "3670f45ffa73e8e8e5fdeee0af92328a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "username"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "11|SphTzJDxcMxPjpTA3GAMnGMepQKaWMpC05NKn10a1d2879de"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "group_menus": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMenu"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Credentials are invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taeyoung-backend/public/api/authenticate": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "operationId": "430a570814cb7471f1abe16268629f11",
                "responses": {
                    "200": {
                        "description": "User authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "11|SphTzJDxcMxPjpTA3GAMnGMepQKaWMpC05NKn10a1d2879de"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "group_menus": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMenu"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "0dec290bd67b054c441262ef3461ba5a",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/logs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get logs",
                "operationId": "516d208907d8ab4a98c5fc82ba8594ed",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "example": "2021-10-01 00:00:00"
                                                    },
                                                    "environment": {
                                                        "type": "string",
                                                        "example": "local"
                                                    },
                                                    "error_type": {
                                                        "type": "string",
                                                        "example": "ERROR"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Error message"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No logs found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No logs found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/bank": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Get all banks with pagination",
                "operationId": "976da2d0ca11a43e5fe9bd66946ae3f9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank collection response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bank"
                ],
                "summary": "Store a newly created bank in storage.",
                "operationId": "f57115dde8f8fbdbe296ada2f76498f2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bank created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/bank/{id}": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Display the specified bank.",
                "operationId": "e78b4d73a80a7d06ba364fa6839064ca",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bank"
                ],
                "summary": "Update the specified bank in storage.",
                "operationId": "98131e8eaf955e0c802e8ad689a2ebef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bank updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bank"
                ],
                "summary": "Remove the specified bank from storage.",
                "operationId": "ec3fa796501ed4471eb0fabfe58df288",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Bank related to payment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank related to payment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/client": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Show all clients",
                "description": "Show all clients",
                "operationId": "3d63222732fa8b7df8ba346c91d5b94b",
                "parameters": [
                    {
                        "parameter": "ruc",
                        "name": "ruc",
                        "in": "query",
                        "description": "Filter by ruc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "filterName",
                        "name": "filterName",
                        "in": "query",
                        "description": "Filter by business name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "email",
                        "name": "email",
                        "in": "query",
                        "description": "Filter by email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "phone",
                        "name": "phone",
                        "in": "query",
                        "description": "Filter by phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "country_id",
                        "name": "country_id",
                        "in": "query",
                        "description": "Filter by country",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "page",
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "per_page",
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "sort",
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ruc",
                                "filterName",
                                "email",
                                "phone",
                                "country_id"
                            ]
                        }
                    },
                    {
                        "parameter": "direction",
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "parameter": "all",
                        "name": "all",
                        "in": "query",
                        "description": "Get all clients",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClientCollection"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Create a new client",
                "description": "CREATE A NEW CLIENT",
                "operationId": "7d64b20d98e8b8b48e4f1406a4b606e2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreClientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/client/{id}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Show a client",
                "description": "Show a client",
                "operationId": "e6ea42462c00bf907e10f322ebb67805",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Client"
                ],
                "summary": "Update a client",
                "description": "UPDATE A CLIENT",
                "operationId": "03272273389c577f5b52d546f838922b",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Client"
                ],
                "summary": "Delete a client",
                "description": "Delete a client",
                "operationId": "c71882444f22b1c5a1bfec82c03271ba",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Client has quotations or sales associated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client has quotations or sales associated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/client/excel": {
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Import clients from excel",
                "description": "Import clients from excel",
                "operationId": "5174323eb830f28e051b93edf7b8eb49",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Clients imported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Clients imported successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/currency": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get all currencies",
                "description": "Get all currencies",
                "operationId": "a933af9df9ea5aa471a7908ac1785e3b",
                "parameters": [
                    {
                        "name": "buyRate",
                        "in": "query",
                        "description": "Filter by buy rate",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "saleRate",
                        "in": "query",
                        "description": "Filter by sale rate",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter by date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort by order",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Currency"
                ],
                "summary": "Create a currency",
                "description": "Create a currency",
                "operationId": "f8209253fb0605fbd3423571a7ec3c26",
                "requestBody": {
                    "description": "Pass currency data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCurrencyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/currency/{id}": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get a currency",
                "description": "Get a currency",
                "operationId": "f6c4cd1a519289eec9e7b3fd2c8f2ff5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Currency not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Currency"
                ],
                "summary": "Update a currency",
                "description": "Update a currency",
                "operationId": "b7f5a0369ae10c0360793974c5bb8853",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass currency data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCurrencyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Currency not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Currency"
                ],
                "summary": "Delete a currency",
                "description": "Delete a currency",
                "operationId": "c3f5b81f2db6e3dc2fc8765aa3d2ec74",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Currency not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/department": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get all departments",
                "operationId": "959b83b996c1a48248747d360125591c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taeyoung-backend/public/api/department/{id}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get department by id",
                "operationId": "56339ee2899fe658f8d3ca054dc756cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of district",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taeyoung-backend/public/api/extension": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "summary": "Show all extensions",
                "description": "SHOW ALL COMMITMENTS",
                "operationId": "1d02e338ff0db8a0be373f0a81172e5e",
                "parameters": [
                    {
                        "name": "accountReceivable_id",
                        "in": "query",
                        "description": "ID of the accountReceivable",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show all extensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Extension"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Extension"
                ],
                "summary": "Create an extension",
                "operationId": "c71a4ac985f04e572caa15cd8bdf8b57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExtensionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create an extension",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Extension"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/extension/{id}": {
            "delete": {
                "tags": [
                    "Extension"
                ],
                "summary": "Delete an extension",
                "operationId": "165fb978dc80121c17603fc00e41c049",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the extension",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete an extension",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Extension"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Extension not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/paymentConcept": {
            "get": {
                "tags": [
                    "PaymentConcept"
                ],
                "summary": "Get all payment concepts",
                "description": "Get all payment concepts",
                "operationId": "2e76ba9a79456da436bfa15eec0a557c",
                "parameters": [
                    {
                        "parameter": "all",
                        "name": "all",
                        "in": "query",
                        "description": "Get all units",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "parameter": "page",
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "per_page",
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "sort",
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "direction",
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "parameter": "number",
                        "name": "number",
                        "in": "query",
                        "description": "Filter by number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "name",
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "type",
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentConceptCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PaymentConcept"
                ],
                "summary": "Create a payment concept",
                "description": "Create a payment concept",
                "operationId": "a90e45ecc7025c31e7c644356386ef17",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePaymentConceptRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentConcept"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/paymentConcept/{id}": {
            "get": {
                "tags": [
                    "PaymentConcept"
                ],
                "summary": "Get a payment concept",
                "description": "Get a payment concept",
                "operationId": "5e34298ec7a8bac4d3b25a60a3a0534e",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Payment concept ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentConcept"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment concept not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment concept not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "PaymentConcept"
                ],
                "summary": "Update a payment concept",
                "description": "Update a payment concept",
                "operationId": "73f7b8114b3ea85788e1e9f2e0e3e027",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Payment concept ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePaymentConceptRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentConcept"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment concept not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment concept not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PaymentConcept"
                ],
                "summary": "Delete a payment concept",
                "description": "Delete a payment concept",
                "operationId": "389766ec63090d2142de64140429d103",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Payment concept ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment concept deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment concept not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment concept not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/repuestos": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get all spare parts",
                "operationId": "e51fbf3c6aec3110626942721d1e7c6b",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Code of spare part",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of spare part",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spare parts found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/venta/{id}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get a sale",
                "operationId": "d9d5a60b781e029825d90c1c27bff881",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reporte de Venta en formato PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/compra/{id}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get a purchase",
                "operationId": "e3c712a21316bfd249b217b4b435285b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reporte de Compra en formato PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/cotizacion/{id}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get a purchase",
                "operationId": "4b2840e41f6b57a7bf495e9d96c2df71",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reporte de Cotización en formato PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/province": {
            "get": {
                "tags": [
                    "Province"
                ],
                "summary": "Get all provinces",
                "operationId": "98382c9169bff7abdac3bf6c6c2f35d8",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProvinceResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/province/{id}": {
            "get": {
                "tags": [
                    "Province"
                ],
                "summary": "Get province by id",
                "operationId": "eefc0a02b536f7de9011bf52ce7b53f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of province",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProvinceResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taeyoung-backend/public/api/purchase": {
            "get": {
                "tags": [
                    "Purchase"
                ],
                "summary": "List Purchases",
                "description": "Returns a list of Purchases.",
                "operationId": "5e13a68e885ce0a892de8d00d8f2c9a8",
                "parameters": [
                    {
                        "parameter": "page",
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "per_page",
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "number",
                        "name": "number",
                        "in": "query",
                        "description": "Purchase number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "date",
                        "name": "date[]",
                        "in": "query",
                        "description": "Purchase date",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date"
                            }
                        }
                    },
                    {
                        "parameter": "supplier_id",
                        "name": "supplier_id",
                        "in": "query",
                        "description": "Supplier ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "supplier$filterName",
                        "name": "supplier$filterName",
                        "in": "query",
                        "description": "Supplier name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "supplier$country_id",
                        "name": "supplier$country_id",
                        "in": "query",
                        "description": "Supplier country ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "sort",
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "direction",
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Purchase"
                ],
                "summary": "Store Purchase",
                "description": "Store a new Purchase.",
                "operationId": "c0150dc9c945e05d7d910a91172d7cd9",
                "requestBody": {
                    "description": "Purchase data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePurchaseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/purchase/{id}": {
            "get": {
                "tags": [
                    "Purchase"
                ],
                "summary": "Show Purchase",
                "description": "Returns a Purchase.",
                "operationId": "406847cc807b159de0468be3c6e040c9",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Purchase ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Purchase"
                ],
                "summary": "Update Purchase",
                "description": "Update a Purchase.",
                "operationId": "f8845bf16f864a24d1f8a8dc31b14da0",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Purchase ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Purchase data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePurchaseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Purchase"
                ],
                "summary": "Destroy Purchase",
                "description": "Destroy a Purchase.",
                "operationId": "e207c5ba3c9957d507c50b470939d780",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Purchase ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/quotation": {
            "get": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Get all quotations",
                "description": "Get all quotations",
                "operationId": "b6ad0ebbf7b868424b0ad8064cd88114",
                "parameters": [
                    {
                        "parameter": "all",
                        "name": "all",
                        "in": "query",
                        "description": "Get all units",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "parameter": "page",
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "per_page",
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "sort",
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "direction",
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "parameter": "number",
                        "name": "number",
                        "in": "query",
                        "description": "Filter by number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "date",
                        "name": "date[]",
                        "in": "query",
                        "description": "Filter by date",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "parameter": "detail",
                        "name": "detail",
                        "in": "query",
                        "description": "Filter by detail",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "client$filterName",
                        "name": "client$filterName",
                        "in": "query",
                        "description": "Filter by client name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Store a new quotation",
                "description": "Store a new quotation",
                "operationId": "a10f7bd838842d59e0ce4ef770879cfd",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreQuotationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuotationResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/quotation/{id}": {
            "get": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Show a quotation",
                "description": "Show a quotation",
                "operationId": "b0b55af43f7c86f02310f576a189dbc9",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Quotation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuotationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quotation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quotation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Update a quotation",
                "description": "Update a quotation",
                "operationId": "c2c613321fabe55f3b62e22065107c59",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Quotation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Quotation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateQuotationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuotationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quotation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quotation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Delete a quotation",
                "description": "Delete a quotation",
                "operationId": "ca0ae3d82574039bb8b63d269b0474bf",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Quotation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quotation deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quotation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quotation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Quotation cannot be deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quotation cannot be deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/sale": {
            "get": {
                "tags": [
                    "Sale"
                ],
                "summary": "List Sales",
                "description": "Returns a list of Sales.",
                "operationId": "d530e15bc7d7c298aef01ee02edba0ed",
                "parameters": [
                    {
                        "parameter": "page",
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "per_page",
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "documentType",
                        "name": "documentType",
                        "in": "query",
                        "description": "Document type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BOLETA",
                                "FACTURA"
                            ]
                        }
                    },
                    {
                        "parameter": "number",
                        "name": "number",
                        "in": "query",
                        "description": "Sale number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "date",
                        "name": "date[]",
                        "in": "query",
                        "description": "Sale date",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date"
                            }
                        }
                    },
                    {
                        "parameter": "client_id",
                        "name": "client_id",
                        "in": "query",
                        "description": "Client ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "client$filterName",
                        "name": "client$filterName",
                        "in": "query",
                        "description": "Client name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "client$country_id",
                        "name": "client$country_id",
                        "in": "query",
                        "description": "Client country ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "quotation_id",
                        "name": "quotation_id",
                        "in": "query",
                        "description": "Quotation ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "status",
                        "name": "status",
                        "in": "query",
                        "description": "Status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PENDIENTE",
                                "PAGADO",
                                "VENCIDO"
                            ]
                        }
                    },
                    {
                        "parameter": "sort",
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "direction",
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sale"
                ],
                "summary": "Store Sale",
                "description": "Stores a Sale.",
                "operationId": "8d483a26901987969ee3fd0a21efd07f",
                "requestBody": {
                    "description": "Sale data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSaleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/sale/{id}": {
            "get": {
                "tags": [
                    "Sale"
                ],
                "summary": "Show Sale",
                "description": "Returns a Sale.",
                "operationId": "76c4e990956941dedf4ffc1f1646a04d",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Purchase ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Sale"
                ],
                "summary": "Update Sale",
                "description": "Updates a Sale.",
                "operationId": "74a8109977a3385ddc8edbaf0a1920f9",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Sale ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Sale data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSaleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sale"
                ],
                "summary": "Destroy Sale",
                "description": "Deletes a Sale.",
                "operationId": "1bf9b1f462fa7b31d2e431a354903ba7",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Sale ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/searchByDni/{dni}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search information by DNI",
                "description": "Search information about a person by their DNI number.",
                "operationId": "bd8cc3277dea38f8d0960e352a162f8b",
                "parameters": [
                    {
                        "name": "dni",
                        "in": "path",
                        "description": "DNI number of the person to search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information found successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "code": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "dni": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "apepat": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "apemat": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "apcas": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "nombres": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "fecnac": {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "ubigeo": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/searchByRuc/{ruc}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search information by RUC",
                "description": "Search information about a person by their RUC number.",
                "operationId": "6cf1264264f79f452b70f4b2856e9dc3",
                "parameters": [
                    {
                        "name": "ruc",
                        "in": "path",
                        "description": "RUC number of the person to search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information found successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "code": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "RUC": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "RazonSocial": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "Direccion": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "Tipo": {
                                                "type": "string"
                                            },
                                            "Inscripcion": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/sparePart": {
            "get": {
                "tags": [
                    "Spare Parts"
                ],
                "summary": "List all spare parts",
                "operationId": "96d63257f79c509c75311100d5069d01",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "Get all items",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of spare parts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SparePartPagination"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Spare Parts"
                ],
                "summary": "Create a spare part",
                "operationId": "3197f695269df188fb8508aa29e68ebc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SparePartRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Spare part created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SparePartResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnSauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/sparePart/{id}": {
            "get": {
                "tags": [
                    "Spare Parts"
                ],
                "summary": "Show a spare part",
                "operationId": "ccfdf0e52b6e39d1066b6148a16ac97a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Spare part ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spare part detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SparePartResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Spare part not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Spare part not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Spare Parts"
                ],
                "summary": "Update a spare part",
                "operationId": "15228764d4f1d66c726f9faa927908bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Spare part ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SparePartRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Spare part updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SparePartResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Spare part not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Spare part not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Spare Parts"
                ],
                "summary": "Delete a spare part",
                "operationId": "35289728489795322b61114858b7be84",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Spare part ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spare part deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Spare part deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Spare part not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Spare part not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/supplier": {
            "get": {
                "tags": [
                    "Supplier"
                ],
                "summary": "List all suppliers",
                "description": "Show all suppliers",
                "operationId": "846d032d37ae8fae626d404be694761e",
                "parameters": [
                    {
                        "parameter": "ruc",
                        "name": "ruc",
                        "in": "query",
                        "description": "Filter by ruc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "filterName",
                        "name": "filterName",
                        "in": "query",
                        "description": "Filter by business name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "email",
                        "name": "email",
                        "in": "query",
                        "description": "Filter by email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "phone",
                        "name": "phone",
                        "in": "query",
                        "description": "Filter by phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "country_id",
                        "name": "country_id",
                        "in": "query",
                        "description": "Filter by country",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "page",
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "per_page",
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "sort",
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ruc",
                                "filterName",
                                "email",
                                "phone",
                                "country_id"
                            ]
                        }
                    },
                    {
                        "parameter": "direction",
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "parameter": "all",
                        "name": "all",
                        "in": "query",
                        "description": "Get all suppliers",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupplierCollection"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Create a new supplier",
                "operationId": "656d3da27b32060216b9a7c225aa251e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSupplierRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Supplier created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/supplier/{id}": {
            "get": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Show a supplier",
                "operationId": "4328f13d0f645fdce27d2592dd90778f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Update a supplier",
                "operationId": "df4f2e2623801b50ca898b1da220811b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSupplierRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Supplier updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Delete a supplier",
                "operationId": "bd30b086410cccf0d0d7ef986ca5c2c2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/unit": {
            "get": {
                "tags": [
                    "Unit"
                ],
                "summary": "Get all units",
                "description": "Get all units",
                "operationId": "bdc37374ed2261fcd984583f93ccb69f",
                "parameters": [
                    {
                        "parameter": "all",
                        "name": "all",
                        "in": "query",
                        "description": "Get all units",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "parameter": "page",
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "per_page",
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "parameter": "sort",
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "direction",
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "parameter": "name",
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "abbreviation",
                        "name": "abbreviation",
                        "in": "query",
                        "description": "Filter by abbreviation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnitCollection"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Unit"
                ],
                "summary": "Create a unit",
                "description": "Create a unit",
                "operationId": "f81039077e7954d672d09195608a0dd0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUnitRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/unit/{id}": {
            "get": {
                "tags": [
                    "Unit"
                ],
                "summary": "Get a unit",
                "description": "Get a unit",
                "operationId": "7b4deca2201d2079ab9067305711dfc5",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Unit ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unit not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unit not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Unit"
                ],
                "summary": "Update a unit",
                "description": "Update a unit",
                "operationId": "eeca75c9925be5db53e7e9d8f763719e",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Unit ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUnitRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unit not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unit not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Unit"
                ],
                "summary": "Delete a unit",
                "description": "Delete a unit",
                "operationId": "bc0590b8344a77baf0cd56cd1490fc67",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "Unit ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unit deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unit not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unit not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Unit has spare parts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unit has spare parts"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taeyoung-backend/public/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of users",
                "operationId": "3752870fbc2e7f10bdce9d997d51a45b",
                "parameters": [
                    {
                        "name": "names",
                        "in": "query",
                        "description": "Filter by names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "typeuser_id",
                        "in": "query",
                        "description": "Filter by type user id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "Get all items",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a user",
                "operationId": "6dccc675f1e5c545bc34ba6a047b5075",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "PaginationLinks": {
                "properties": {
                    "first": {
                        "type": "string",
                        "example": "https://develop.garzasoft.com/taeyoung-backend/public/api/path?page=1"
                    },
                    "last": {
                        "type": "string",
                        "example": "https://develop.garzasoft.com/taeyoung-backend/public/api/path?page=4"
                    },
                    "prev": {
                        "type": "string",
                        "example": "null"
                    },
                    "next": {
                        "type": "string",
                        "example": "https://develop.garzasoft.com/taeyoung-backend/public/api/path?page=2"
                    }
                },
                "type": "object"
            },
            "PaginationMetaLinks": {
                "properties": {
                    "url": {
                        "type": "string",
                        "example": "https://develop.garzasoft.com/taeyoung-backend/public/api/path?page=1"
                    },
                    "label": {
                        "type": "string",
                        "example": "1"
                    },
                    "active": {
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "type": "integer",
                        "example": "4"
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationMetaLinks"
                    },
                    "path": {
                        "type": "string",
                        "example": "https://develop.garzasoft.com/taeyoung-backend/public/api/path"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": "15"
                    },
                    "to": {
                        "type": "integer",
                        "example": "15"
                    },
                    "total": {
                        "type": "integer",
                        "example": "60"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "error": {
                        "type": "string",
                        "example": "The pagination must be an integer."
                    }
                },
                "type": "object"
            },
            "Unauthenticated": {
                "properties": {
                    "error": {
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            },
            "StoreClientRequest": {
                "title": "Store Client Request",
                "required": [
                    "typeDocument",
                    "country_id"
                ],
                "properties": {
                    "typeDocument": {
                        "type": "string",
                        "example": "DNI"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "ruc": {
                        "type": "string",
                        "example": "12345678901"
                    },
                    "names": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "fatherSurname": {
                        "type": "string",
                        "example": "Perez"
                    },
                    "motherSurname": {
                        "type": "string",
                        "example": "Gomez"
                    },
                    "businessName": {
                        "type": "string",
                        "example": "Empresa SAC"
                    },
                    "address": {
                        "type": "string",
                        "example": "Av. Los Pinos 123"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@mail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "987654321"
                    },
                    "representativeDni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "representativeNames": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "country_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "province_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "StoreCurrencyRequest": {
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-01-01"
                    },
                    "buyRate": {
                        "type": "number",
                        "example": "20.00"
                    },
                    "saleRate": {
                        "type": "number",
                        "example": "21.00"
                    }
                },
                "type": "object"
            },
            "StorePayableMovementRequest": {
                "title": "StorePayableMovementRequest",
                "description": "Store Payable Movement Request",
                "properties": {
                    "currencyType": {
                        "type": "string",
                        "example": "PEN"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-10-13"
                    },
                    "cash": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "yape": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "plin": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "card": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "deposit": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "isBankPayment": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Comment"
                    },
                    "bank_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "StoreReceivableMovementRequest": {
                "title": "StoreReceivableMovementRequest",
                "description": "Store Receivable Movement Request",
                "properties": {
                    "currencyType": {
                        "type": "string",
                        "example": "PEN"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-10-13"
                    },
                    "cash": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "yape": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "plin": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "card": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "deposit": {
                        "type": "numeric",
                        "example": "100.00"
                    },
                    "isBankPayment": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Comment"
                    },
                    "bank_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "StorePaymentConceptRequest": {
                "title": "StorePaymentConceptRequest",
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    }
                },
                "type": "object"
            },
            "StorePurchaseRequest": {
                "required": [
                    "date",
                    "detailMachinery",
                    "supplier_id"
                ],
                "properties": {
                    "quotation_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-19"
                    },
                    "detail": {
                        "type": "string",
                        "example": "This is a detail"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "USD"
                    },
                    "supplier_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "detailMachinery": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "example": "This is a description"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "purchasePrice": {
                                    "type": "number",
                                    "example": "100"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "detailSpareParts": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "quantity": {
                                    "type": "integer",
                                    "example": "2"
                                },
                                "spare_part_id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "purchasePrice": {
                                    "type": "number",
                                    "example": "100"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreQuotationRequest": {
                "title": "StoreQuotationRequest",
                "required": [
                    "date",
                    "detail",
                    "discount",
                    "currencyType",
                    "client_id",
                    "detailMachinery",
                    "detailSpareParts"
                ],
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-19"
                    },
                    "detail": {
                        "type": "string",
                        "example": "This is a detail"
                    },
                    "discount": {
                        "type": "number",
                        "example": "0"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "USD"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "igvActive": {
                        "type": "string",
                        "example": "true"
                    },
                    "images[]": {
                        "type": "array",
                        "items": {
                            "type": "file",
                            "format": "binary"
                        }
                    },
                    "detailMachinery[]": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailMachineryRequest"
                        }
                    },
                    "detailSpareParts[]": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailSparePartRequest"
                        }
                    }
                },
                "type": "object"
            },
            "DetailMachineryRequest": {
                "required": [
                    "description",
                    "quantity",
                    "salePrice"
                ],
                "properties": {
                    "description": {
                        "type": "string",
                        "example": "Description"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "purchasePrice": {
                        "type": "number",
                        "example": "100"
                    },
                    "salePrice": {
                        "type": "number",
                        "example": "100"
                    }
                },
                "type": "object"
            },
            "DetailSparePartRequest": {
                "required": [
                    "quantity",
                    "spare_part_id"
                ],
                "properties": {
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "spare_part_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "purchasePrice": {
                        "type": "number",
                        "example": "100"
                    },
                    "salePrice": {
                        "type": "number",
                        "example": "100"
                    }
                },
                "type": "object"
            },
            "StoreSaleRequest": {
                "title": "StoreSaleRequest",
                "required": [
                    "date",
                    "documentType",
                    "paymentType",
                    "quotas",
                    "client_id",
                    "detailMachinery|detailSpareParts"
                ],
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-04"
                    },
                    "documentType": {
                        "type": "string",
                        "enum": [
                            "BOLETA",
                            "FACTURA"
                        ],
                        "example": "BOLETA"
                    },
                    "paymentType": {
                        "type": "string",
                        "enum": [
                            "CONTADO",
                            "CREDITO"
                        ],
                        "example": "CREDITO"
                    },
                    "quotation_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "PEN"
                    },
                    "discount": {
                        "type": "number",
                        "example": "100"
                    },
                    "igvActive": {
                        "type": "boolean",
                        "enum": [
                            "true",
                            "false"
                        ],
                        "example": "true"
                    },
                    "quotas": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "days": {
                                    "type": "integer",
                                    "example": "7"
                                },
                                "amount": {
                                    "type": "number",
                                    "example": "14378.6"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "detailMachinery[]": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "example": "Machinery description"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": "2"
                                },
                                "salePrice": {
                                    "type": "number",
                                    "example": "4000"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "detailSpareParts[]": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "quantity": {
                                    "type": "integer",
                                    "example": "4"
                                },
                                "salePrice": {
                                    "type": "number",
                                    "example": "767.5"
                                },
                                "spare_part_id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreSupplierRequest": {
                "title": "StoreSupplierRequest",
                "properties": {
                    "typeDocument": {
                        "type": "string",
                        "example": "DNI"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "ruc": {
                        "type": "string",
                        "example": "12345678901"
                    },
                    "names": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "fatherSurname": {
                        "type": "string",
                        "example": "Perez"
                    },
                    "motherSurname": {
                        "type": "string",
                        "example": "Gomez"
                    },
                    "businessName": {
                        "type": "string",
                        "example": "Empresa SAC"
                    },
                    "address": {
                        "type": "string",
                        "example": "Av. Los Pinos 123"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@mail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "987654321"
                    },
                    "representativeDni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "representativeNames": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "country_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "StoreUnitRequest": {
                "title": "StoreUnitRequest",
                "required": [
                    "name",
                    "abbreviation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Unidad"
                    },
                    "abbreviation": {
                        "type": "string",
                        "example": "UN"
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Create User Request",
                "required": [
                    "names",
                    "lastnames",
                    "username",
                    "password",
                    "typeuser_id"
                ],
                "properties": {
                    "names": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastnames": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "username": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    },
                    "typeuser_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UpdateClientRequest": {
                "title": "Update Client Request",
                "properties": {
                    "typeDocument": {
                        "type": "string",
                        "example": "DNI"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "ruc": {
                        "type": "string",
                        "example": "12345678901"
                    },
                    "names": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "fatherSurname": {
                        "type": "string",
                        "example": "Perez"
                    },
                    "motherSurname": {
                        "type": "string",
                        "example": "Gomez"
                    },
                    "businessName": {
                        "type": "string",
                        "example": "Empresa SAC"
                    },
                    "address": {
                        "type": "string",
                        "example": "Av. Los Pinos 123"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@mail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "987654321"
                    },
                    "representativeDni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "representativeNames": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "country_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UpdateCurrencyRequest": {
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-01-01"
                    },
                    "buyRate": {
                        "type": "number",
                        "example": "20.00"
                    },
                    "saleRate": {
                        "type": "number",
                        "example": "21.00"
                    }
                },
                "type": "object"
            },
            "UpdatePaymentConceptRequest": {
                "title": "UpdatePaymentConceptRequest",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    }
                },
                "type": "object"
            },
            "UpdatePurchaseRequest": {
                "properties": {
                    "quotation_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-19"
                    },
                    "detail": {
                        "type": "string",
                        "example": "This is a detail"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "USD"
                    },
                    "supplier_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "detailMachinery": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "example": "This is a description"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "purchasePrice": {
                                    "type": "number",
                                    "example": "100"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "detailSpareParts": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "quantity": {
                                    "type": "integer",
                                    "example": "3"
                                },
                                "spare_part_id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateQuotationRequest": {
                "title": "UpdateQuotationRequest",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-19"
                    },
                    "detail": {
                        "type": "string",
                        "example": "This is a detail"
                    },
                    "discount": {
                        "type": "number",
                        "example": "0"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "USD"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "igvActive": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "detailMachinery": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailMachineryRequest"
                        }
                    },
                    "detailSpareParts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailSparePartRequest"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateSaleRequest": {
                "title": "UpdateSaleRequest",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-04"
                    },
                    "documentType": {
                        "type": "string",
                        "enum": [
                            "BOLETA",
                            "FACTURA"
                        ],
                        "example": "BOLETA"
                    },
                    "paymentType": {
                        "type": "string",
                        "enum": [
                            "CONTADO",
                            "CREDITO"
                        ],
                        "example": "CREDITO"
                    },
                    "quotation_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "PEN"
                    },
                    "discount": {
                        "type": "number",
                        "example": "100"
                    },
                    "igvActive": {
                        "type": "boolean",
                        "enum": [
                            "true",
                            "false"
                        ],
                        "example": "true"
                    },
                    "quotas": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "days": {
                                    "type": "integer",
                                    "example": "7"
                                },
                                "amount": {
                                    "type": "number",
                                    "example": "14378.6"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "detailMachinery": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "example": "Machinery description"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": "2"
                                },
                                "salePrice": {
                                    "type": "number",
                                    "example": "4000"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "detailSpareParts": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "quantity": {
                                    "type": "integer",
                                    "example": "4"
                                },
                                "salePrice": {
                                    "type": "number",
                                    "example": "767.5"
                                },
                                "spare_part_id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateSupplierRequest": {
                "title": "UpdateSupplierRequest",
                "properties": {
                    "typeDocument": {
                        "type": "string",
                        "example": "DNI"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "ruc": {
                        "type": "string",
                        "example": "12345678901"
                    },
                    "names": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "fatherSurname": {
                        "type": "string",
                        "example": "Perez"
                    },
                    "motherSurname": {
                        "type": "string",
                        "example": "Gomez"
                    },
                    "businessName": {
                        "type": "string",
                        "example": "Empresa SAC"
                    },
                    "address": {
                        "type": "string",
                        "example": "Av. Los Pinos 123"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@mail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "987654321"
                    },
                    "representativeDni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "representativeNames": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "country_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UpdateUnitRequest": {
                "title": "UpdateUnitRequest",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Unidad"
                    },
                    "abbreviation": {
                        "type": "string",
                        "example": "UN"
                    }
                },
                "type": "object"
            },
            "AccountPayableResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "paymentType": {
                        "type": "string",
                        "example": "Contado"
                    },
                    "days": {
                        "type": "integer",
                        "example": "30"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-01-01"
                    },
                    "amount": {
                        "type": "number",
                        "example": "1000.00"
                    },
                    "balance": {
                        "type": "number",
                        "example": "1000.00"
                    },
                    "status": {
                        "type": "string",
                        "example": "Pending"
                    },
                    "supplier_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "supplier": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "country": {
                        "type": "string",
                        "example": "United States"
                    },
                    "currency_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quotation": {
                        "type": "string",
                        "example": "COTI-123456"
                    },
                    "order": {
                        "type": "string",
                        "example": "VENT-123456"
                    }
                },
                "type": "object"
            },
            "AccountPayableCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountPayableResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "AccountReceivableResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "paymentType": {
                        "type": "string",
                        "example": "Contado"
                    },
                    "days": {
                        "type": "integer",
                        "example": "30"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-01-01"
                    },
                    "amount": {
                        "type": "number",
                        "example": "1000.00"
                    },
                    "balance": {
                        "type": "number",
                        "example": "1000.00"
                    },
                    "status": {
                        "type": "string",
                        "example": "Pending"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "client": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "country": {
                        "type": "string",
                        "example": "United States"
                    },
                    "currency_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quotation": {
                        "type": "string",
                        "example": "COTI-123456"
                    },
                    "order": {
                        "type": "string",
                        "example": "VENT-123456"
                    }
                },
                "type": "object"
            },
            "AccountReceivableCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountReceivableResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "BankResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Banco de la Nación"
                    }
                },
                "type": "object"
            },
            "BankCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "Client": {
                "required": [
                    "id",
                    "ruc",
                    "businessName",
                    "email",
                    "phone",
                    "country"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "type": {
                        "type": "string",
                        "example": "RUC"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "ruc": {
                        "type": "string",
                        "example": "12345678901"
                    },
                    "names": {
                        "type": "string",
                        "example": "Names"
                    },
                    "fatherSurname": {
                        "type": "string",
                        "example": "Father Surname"
                    },
                    "motherSurname": {
                        "type": "string",
                        "example": "Mother Surname"
                    },
                    "businessName": {
                        "type": "string",
                        "example": "Business Name"
                    },
                    "filterName": {
                        "type": "string",
                        "example": "Filter Name"
                    },
                    "address": {
                        "type": "string",
                        "example": "Address"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@gmail.com"
                    },
                    "phone": {
                        "type": "integer",
                        "example": "123456789"
                    },
                    "representativeDni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "representativeNames": {
                        "type": "string",
                        "example": "Representative Names"
                    },
                    "country": {
                        "type": "string",
                        "example": "Peru"
                    },
                    "province": {
                        "type": "string",
                        "example": "Lima"
                    }
                },
                "type": "object"
            },
            "ClientCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Client"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "CurrencyResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "buyRate": {
                        "type": "number",
                        "example": "20.00"
                    },
                    "saleRate": {
                        "type": "number",
                        "example": "21.00"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-01-01"
                    }
                },
                "type": "object"
            },
            "CurrencyCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CurrencyResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "DepartmentResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Pendidikan"
                    },
                    "provinces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProvinceResource"
                        }
                    }
                },
                "type": "object"
            },
            "DepartmentCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DepartmentResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "DetailMachineryResource": {
                "title": "DetailMachineryResource",
                "description": "Detail Machinery resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a description"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "movementType": {
                        "type": "string",
                        "example": "Ingreso"
                    },
                    "purchasePrice": {
                        "type": "number",
                        "example": "100"
                    },
                    "salePrice": {
                        "type": "number",
                        "example": "100"
                    },
                    "purchaseValue": {
                        "type": "number",
                        "example": "100"
                    },
                    "saleValue": {
                        "type": "number",
                        "example": "100"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quotation_id": {
                        "type": "integer",
                        "example": "21"
                    }
                },
                "type": "object"
            },
            "DetailSparePartResource": {
                "title": "DetailSparePartResource",
                "description": "Detail Spare Part resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "movementType": {
                        "type": "string",
                        "example": "Ingreso"
                    },
                    "purchasePrice": {
                        "type": "number",
                        "example": "100"
                    },
                    "salePrice": {
                        "type": "number",
                        "example": "100"
                    },
                    "purchaseValue": {
                        "type": "number",
                        "example": "100"
                    },
                    "saleValue": {
                        "type": "number",
                        "example": "100"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quotation_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "spare_part_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "sparePart": {
                        "$ref": "#/components/schemas/SparePartResource"
                    }
                },
                "type": "object"
            },
            "PaymentConceptResource": {
                "title": "PaymentConceptResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "string",
                        "example": "123456"
                    },
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    }
                },
                "type": "object"
            },
            "PaymentConceptCollection": {
                "title": "PaymentConceptCollection",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentConceptResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "ProvinceResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Jawa Barat"
                    }
                },
                "type": "object"
            },
            "ProvinceCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProvinceResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "PurchaseResource": {
                "title": "PurchaseResource",
                "description": "Machinery Purchase resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "string",
                        "example": "COMPR-0001"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-19"
                    },
                    "detail": {
                        "type": "string",
                        "example": "This is a detail"
                    },
                    "paymentType": {
                        "type": "string",
                        "example": "Contado"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "USD"
                    },
                    "totalMachinery": {
                        "type": "number",
                        "example": "100"
                    },
                    "totalSpareParts": {
                        "type": "number",
                        "example": "100"
                    },
                    "subtotal": {
                        "type": "number",
                        "example": "100"
                    },
                    "igv": {
                        "type": "number",
                        "example": "18"
                    },
                    "discount": {
                        "type": "number",
                        "example": "0"
                    },
                    "total": {
                        "type": "number",
                        "example": "118"
                    },
                    "totalIncome": {
                        "type": "number",
                        "example": "0"
                    },
                    "totalExpense": {
                        "type": "number",
                        "example": "0"
                    },
                    "comment": {
                        "type": "string",
                        "example": "This is a comment"
                    },
                    "supplier_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quotation_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/SupplierResource"
                    },
                    "quotation": {
                        "$ref": "#/components/schemas/Quotation"
                    },
                    "detailMachinery": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailMachineryResource"
                        }
                    },
                    "detailSpareParts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailSparePartResource"
                        }
                    }
                },
                "type": "object"
            },
            "PurchaseCollection": {
                "title": "PurchaseCollection",
                "description": "Purchase resource collection",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PurchaseResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "QuotationResource": {
                "required": [
                    "id",
                    "number",
                    "date",
                    "detail",
                    "paymentType",
                    "currencyType",
                    "totalMachinery",
                    "totalSpareParts",
                    "subtotal",
                    "igv",
                    "discount",
                    "total",
                    "client_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "string",
                        "example": "COTI-0001"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-19"
                    },
                    "detail": {
                        "type": "string",
                        "example": "This is a detail"
                    },
                    "paymentType": {
                        "type": "string",
                        "example": "Contado"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "USD"
                    },
                    "totalMachinery": {
                        "type": "number",
                        "example": "100"
                    },
                    "totalSpareParts": {
                        "type": "number",
                        "example": "100"
                    },
                    "subtotal": {
                        "type": "number",
                        "example": "100"
                    },
                    "igv": {
                        "type": "number",
                        "example": "18"
                    },
                    "discount": {
                        "type": "number",
                        "example": "0"
                    },
                    "total": {
                        "type": "number",
                        "example": "118"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "client": {
                        "type": "string",
                        "example": "Client Name"
                    },
                    "detailMachinery": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailMachineryResource"
                        }
                    },
                    "detailSpareParts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailSparePartResource"
                        }
                    }
                },
                "type": "object"
            },
            "QuotationCollection": {
                "title": "QuotationCollection",
                "description": "Quotation resource collection",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QuotationResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "SaleResource": {
                "title": "SaleResource",
                "description": "Machinery Sale resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "string",
                        "example": "COMPR-0001"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-19"
                    },
                    "detail": {
                        "type": "string",
                        "example": "This is a detail"
                    },
                    "paymentType": {
                        "type": "string",
                        "example": "Contado"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "USD"
                    },
                    "totalMachinery": {
                        "type": "number",
                        "example": "100"
                    },
                    "totalSpareParts": {
                        "type": "number",
                        "example": "100"
                    },
                    "subtotal": {
                        "type": "number",
                        "example": "100"
                    },
                    "igv": {
                        "type": "number",
                        "example": "18"
                    },
                    "discount": {
                        "type": "number",
                        "example": "0"
                    },
                    "total": {
                        "type": "number",
                        "example": "118"
                    },
                    "totalIncome": {
                        "type": "number",
                        "example": "0"
                    },
                    "totalExpense": {
                        "type": "number",
                        "example": "0"
                    },
                    "comment": {
                        "type": "string",
                        "example": "This is a comment"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quotation_id": {
                        "type": "integer",
                        "example": "21"
                    },
                    "client": {
                        "$ref": "#/components/schemas/Client"
                    },
                    "quotation": {
                        "$ref": "#/components/schemas/Quotation"
                    },
                    "detailMachinery": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailMachineryResource"
                        }
                    },
                    "detailSpareParts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailSparePartResource"
                        }
                    }
                },
                "type": "object"
            },
            "SaleCollection": {
                "title": "SaleCollection",
                "description": "Sale resource collection",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "SparePartResource": {
                "title": "SparePartResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "code": {
                        "type": "string",
                        "example": "123456"
                    },
                    "name": {
                        "type": "string",
                        "example": "Spare Part"
                    },
                    "purchasePrice": {
                        "type": "number",
                        "example": "100.00"
                    },
                    "salePrice": {
                        "type": "number",
                        "example": "150.00"
                    },
                    "purchaseValue": {
                        "type": "number",
                        "example": "1000.00"
                    },
                    "saleValue": {
                        "type": "number",
                        "example": "1500.00"
                    },
                    "stock": {
                        "type": "integer",
                        "example": "10"
                    },
                    "unit_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/UnitResource"
                    }
                },
                "type": "object"
            },
            "SparePartPagination": {
                "title": "SparePartPagination",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SparePartResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "SupplierResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "typeDocument": {
                        "type": "string",
                        "example": "DNI"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "ruc": {
                        "type": "string",
                        "example": "12345678901"
                    },
                    "names": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "fatherSurname": {
                        "type": "string",
                        "example": "Perez"
                    },
                    "motherSurname": {
                        "type": "string",
                        "example": "Gomez"
                    },
                    "businessName": {
                        "type": "string",
                        "example": "Empresa SAC"
                    },
                    "filterName": {
                        "type": "string",
                        "example": "Juan Perez Gomez"
                    },
                    "address": {
                        "type": "string",
                        "example": "Av. Los Pinos 123"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@mail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "987654321"
                    },
                    "representativeDni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "representativeNames": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "country": {
                        "type": "string",
                        "example": "Peru"
                    },
                    "country_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "SupplierCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SupplierResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "UnitResource": {
                "title": "UnitResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Unit 1"
                    },
                    "abbreviation": {
                        "type": "string",
                        "example": "UN"
                    }
                },
                "type": "object"
            },
            "UnitCollection": {
                "title": "UnitCollection",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnitResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "Bank": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Bank BCA"
                    }
                },
                "type": "object"
            },
            "BankRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Bank BCA"
                    }
                },
                "type": "object"
            },
            "Country": {
                "title": "Country",
                "description": "Country model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Peru"
                    }
                },
                "type": "object"
            },
            "Extension": {
                "title": "Extension",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "oldEndDate": {
                        "type": "string",
                        "example": "2024-06-27"
                    },
                    "newEndDate": {
                        "type": "string",
                        "example": "2024-06-27"
                    },
                    "reason": {
                        "type": "string",
                        "example": "Razón de la extensión"
                    },
                    "accountReceivable_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-06-27 22:59:36"
                    }
                },
                "type": "object"
            },
            "ExtensionRequest": {
                "title": "ExtensionRequest",
                "required": [
                    "newEndDate",
                    "reason",
                    "accountReceivable_id"
                ],
                "properties": {
                    "newEndDate": {
                        "type": "string",
                        "example": "2024-06-27"
                    },
                    "reason": {
                        "type": "string",
                        "example": "Razón de la extensión"
                    },
                    "accountReceivable_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "GroupMenu": {
                "title": "GroupMenu",
                "required": [
                    "id",
                    "name",
                    "icon"
                ],
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "icon": {
                        "type": "string",
                        "example": "fas fa-user"
                    },
                    "order": {
                        "type": "number",
                        "example": "1"
                    },
                    "option_menus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OptionMenu"
                        }
                    }
                },
                "type": "object"
            },
            "OptionMenu": {
                "title": "OptionMenu",
                "required": [
                    "id",
                    "name",
                    "route",
                    "icon",
                    "groupmenu_id"
                ],
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Principal"
                    },
                    "route": {
                        "type": "string",
                        "example": "principal"
                    },
                    "order": {
                        "type": "number",
                        "example": "1"
                    },
                    "icon": {
                        "type": "string",
                        "example": "fas fa-user"
                    },
                    "groupmenu_id": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "PaymentConcept": {
                "title": "PaymentConcept",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "string",
                        "example": "123456"
                    },
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    }
                },
                "type": "object"
            },
            "Supplier": {
                "title": "Supplier",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "typeDocument": {
                        "type": "string",
                        "example": "DNI"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "ruc": {
                        "type": "string",
                        "example": "12345678901"
                    },
                    "names": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "fatherSurname": {
                        "type": "string",
                        "example": "Perez"
                    },
                    "motherSurname": {
                        "type": "string",
                        "example": "Gomez"
                    },
                    "businessName": {
                        "type": "string",
                        "example": "Empresa SAC"
                    },
                    "address": {
                        "type": "string",
                        "example": "Av. Los Pinos 123"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@mail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "987654321"
                    },
                    "representativeDni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "representativeNames": {
                        "type": "string",
                        "example": "Juan"
                    },
                    "country_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Quotation": {
                "required": [
                    "date",
                    "currencyType",
                    "price",
                    "initialPayment",
                    "balance",
                    "debts",
                    "exchangeRate",
                    "currency_id",
                    "client_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "string",
                        "example": "Q-0001"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-19"
                    },
                    "detail": {
                        "type": "string",
                        "example": "This is a detail"
                    },
                    "currencyType": {
                        "type": "string",
                        "example": "USD"
                    },
                    "paymentType": {
                        "type": "string",
                        "enum": [
                            "CONTADO",
                            "CREDITO"
                        ],
                        "example": "CONTADO"
                    },
                    "totalMachinery": {
                        "type": "number",
                        "example": "100"
                    },
                    "totalSpareParts": {
                        "type": "number",
                        "example": "100"
                    },
                    "subtotal": {
                        "type": "number",
                        "example": "100"
                    },
                    "igv": {
                        "type": "number",
                        "example": "18"
                    },
                    "discount": {
                        "type": "number",
                        "example": "0"
                    },
                    "total": {
                        "type": "number",
                        "example": "118"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "SparePartRequest": {
                "title": "SparePartRequest",
                "required": [
                    "code",
                    "name",
                    "purchasePrice",
                    "salePrice",
                    "stock"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "123456"
                    },
                    "name": {
                        "type": "string",
                        "example": "Spare Part"
                    },
                    "purchasePrice": {
                        "type": "number",
                        "example": "100.00"
                    },
                    "salePrice": {
                        "type": "number",
                        "example": "150.00"
                    }
                },
                "type": "object"
            },
            "TypeUser": {
                "title": "TypeUser",
                "description": "TypeUser model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    }
                },
                "type": "object"
            },
            "Unit": {
                "title": "Unit",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Unidad"
                    },
                    "abbreviation": {
                        "type": "string",
                        "example": "UN"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "names": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastnames": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "username": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "typeuser_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "typeuser": {
                        "$ref": "#/components/schemas/TypeUser"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Account Payables",
            "description": "Account Payables"
        },
        {
            "name": "Account Receivables",
            "description": "Account Receivables"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Logs",
            "description": "Logs"
        },
        {
            "name": "Bank",
            "description": "Bank"
        },
        {
            "name": "Client",
            "description": "Client"
        },
        {
            "name": "Currency",
            "description": "Currency"
        },
        {
            "name": "Department",
            "description": "Department"
        },
        {
            "name": "Extension",
            "description": "Extension"
        },
        {
            "name": "PaymentConcept",
            "description": "PaymentConcept"
        },
        {
            "name": "Reports",
            "description": "Reports"
        },
        {
            "name": "Province",
            "description": "Province"
        },
        {
            "name": "Purchase",
            "description": "Purchase"
        },
        {
            "name": "Quotation",
            "description": "Quotation"
        },
        {
            "name": "Sale",
            "description": "Sale"
        },
        {
            "name": "Search",
            "description": "Search"
        },
        {
            "name": "Spare Parts",
            "description": "Spare Parts"
        },
        {
            "name": "Supplier",
            "description": "Supplier"
        },
        {
            "name": "Unit",
            "description": "Unit"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}